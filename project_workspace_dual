#!/usr/bin/osascript

on run argv
    -- Default values
    set projectPath to ""
    set runCommand to "start"  -- default: start, or preview, or startProd, or start:PORT
    set windowTitle to "Project Workspace"
    set branchName to "greg"
    
    -- Parse arguments
    if (count of argv) ≥ 1 then
        set projectPath to item 1 of argv
    else
        error "Usage: ./project_workspace_dual /path/to/project [start|preview|startProd|start:PORT] [window-title] [branch]"
    end if
    
    if (count of argv) ≥ 2 then
        set runCommand to item 2 of argv
    end if
    
    if (count of argv) ≥ 3 then
        set windowTitle to item 3 of argv
    end if
    
    if (count of argv) ≥ 4 then
        set branchName to item 4 of argv
    end if
    
    -- Build yarn command (handle custom port format like start:8081)
    if runCommand contains ":" then
        -- Extract port number from start:PORT format
        set AppleScript's text item delimiters to ":"
        set commandParts to text items of runCommand
        set baseCommand to item 1 of commandParts
        set portNumber to item 2 of commandParts
        set AppleScript's text item delimiters to ""
        
        -- Run npx vite with DEV_PORT (bypasses package.json script)
        set yarnCommand to "DEV_PORT=" & portNumber & " npx vite"
    else
        -- Regular yarn command
        set yarnCommand to "yarn run " & runCommand
    end if
    
    tell application "Terminal"
        -- Get random profiles for visual distinction
        set allProfiles to name of every settings set
        set randomIndex1 to random number from 1 to count of allProfiles
        set profile1 to item randomIndex1 of allProfiles
        set randomIndex2 to random number from 1 to count of allProfiles
        set profile2 to item randomIndex2 of allProfiles
        
        -- Window 1: Claude
        set defaultSettings to default settings
        set default settings to settings set profile1
        set claudeWindow to do script ""
        
        tell claudeWindow
            set custom title to windowTitle & " - Claude"
        end tell
        
        -- Navigate and setup git
        set navigateCommand to "cd " & quoted form of projectPath
        do script navigateCommand in claudeWindow
        delay 1
        
        -- Git setup (with visible output)
        set gitSetupCommand to "echo 'Setting up workspace...' && git stash && git checkout " & branchName & " 2>/dev/null || git checkout -b " & branchName & " && git pull && echo 'Ready'"
        do script gitSetupCommand in claudeWindow
        delay 3
        
        -- Start Claude
        do script "clear && claude" in claudeWindow
        
        -- Window 2: Server
        set default settings to settings set profile2
        set serverWindow to do script ""
        
        tell serverWindow
            set custom title to windowTitle & " - Server"
        end tell
        
        -- Navigate and setup git
        do script navigateCommand in serverWindow
        delay 1
        
        -- Git setup and start server (with visible output)
        set serverCommand to "echo 'Setting up server...' && git stash && git checkout " & branchName & " 2>/dev/null || git checkout -b " & branchName & " && git pull && echo 'Starting: " & yarnCommand & "' && " & yarnCommand
        do script serverCommand in serverWindow
        
        -- Restore original default and bring Claude window to front
        set default settings to defaultSettings
        set frontmost of window 1 to true
        
        activate
    end tell
end run